8 BCOS 3 - DACs and (more) PWM
8.1 Overview
8.1.1 Design overview
In the last practical I dealt with analog-to-digital convertors (ADCs). In this practical, we
will be looking at their counterparts, digital-to-analog convertors, or DACs.
A DAC converts a digital code into an analog voltage or current and works on the general
premise that VOUT /IOUT = k ∗ DigitalInput, where k is a proportionality factor and the
digital input is a number in the range of 0 to 2bits − 1.
DACs have a variety of uses, with the most important among them converting digital signals
to analog audio in just about every single electronic audio system in the world.
The STM32F051 Discovery Board already has a build in DAC. Setting it up is trivial and
there are plenty of online resources available if you wish to test it out. Instead, in this practical
we will be making a simple DAC using PWM and a low-pass filter. You will need to build
the circuit you designed for Tutorial 4, generate lookup tables for a few waves and set up the
two timers needed for generating the PWM signal.
All of the code needed to initialize the peripherals used in this practical is automatically
generated by STMCubeIDE using the .ioc file. If you want to see how these peripherals were
configured, you can open up the configuration GUI by double-clicking on the .ioc file included
in the project folder.
